-- uses a attribute to save kills

local DataStoreService = game:GetService("DataStoreService")
local killsDataStore = DataStoreService:GetDataStore("PlayerKills")

local function savePlayerKills(player)
	local leaderstats = player:FindFirstChild("leaderstats")
	if leaderstats then
		local kills = leaderstats:FindFirstChild("Kills")
		if kills then
			local success, errorMessage = pcall(function()
				killsDataStore:SetAsync(player.UserId, kills.Value)
			end)
			if not success then
				warn("Failed to save kills for player " .. player.Name .. ": " .. errorMessage)
			end
		end
	end
end

local function loadPlayerKills(player)
	local leaderstats = player:FindFirstChild("leaderstats")
	if leaderstats then
		local kills = leaderstats:FindFirstChild("Kills")
		if kills then
			local success, savedKills = pcall(function()
				return killsDataStore:GetAsync(player.UserId)
			end)
			if success and savedKills then
				kills.Value = savedKills
			elseif not success then
				warn("Failed to load kills for player " .. player.Name .. ": " .. savedKills)
			end
		end
	end
end

game.Players.PlayerAdded:Connect(function(player)
	local leaderstats = Instance.new("Folder")
	leaderstats.Name = "leaderstats"
	leaderstats.Parent = player

	local kills = Instance.new("IntValue")
	kills.Name = "Kills"
	kills.Value = 0
	kills.Parent = leaderstats

	loadPlayerKills(player)

	player.CharacterAdded:Connect(function(character)
		local humanoid = character:WaitForChild("Humanoid")

		humanoid.Died:Connect(function()
			local attackerName = humanoid:GetAttribute("Attacker")
			if attackerName then
				local attacker = game.Players:FindFirstChild(attackerName)
				if attacker then
					local leaderstats = attacker:FindFirstChild("leaderstats")
					if leaderstats then
						local kills = leaderstats:FindFirstChild("Kills")
						if kills then
							kills.Value = kills.Value + 1
						end
					end
				end
			end
		end)
	end)
end)

game.Players.PlayerRemoving:Connect(function(player)
	savePlayerKills(player)
end)

while true do
	for _, player in pairs(game.Players:GetPlayers()) do
		savePlayerKills(player)
	end
	wait(60)
end
